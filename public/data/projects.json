{
  "version": 1,
  "projects": [
    {
      "id": "gitseek",
      "title": "GitSeek",
      "description": "AI驱动的代码提取工具，智能分析GitHub仓库并提取相关代码片段。",
      "detailedDescription": "## 项目概述\n\nGitSeek 是一个基于AI的代码提取工具，用于解决开发者在学习开源项目时遇到的代码定位问题。传统方法需要手动浏览大型代码仓库来寻找特定功能的实现，这种方式效率较低且容易遗漏关键细节。\n\nGitSeek通过自然语言处理技术，允许用户使用简单的文本描述来查找相关代码文件。系统自动提取完整的代码片段，这些代码可直接用于AI工具分析或作为开发参考。\n\n## 技术架构\n\n后端基于Python FastAPI框架构建，通过GitHub API获取仓库数据。核心算法负责解析项目结构、分析代码依赖关系，并基于语义相似度匹配用户查询。前端采用TypeScript和React技术栈，提供简洁的用户界面和直观的交互体验。\n\n系统实施了临时访问策略来保护用户隐私，所有GitHub Token和下载的代码在分析完成后自动清理。项目还集成了架构可视化模块，能够自动生成目录树和架构图表，帮助用户理解项目的整体结构。\n\n## 应用价值\n\nGitSeek有效解决了代码学习过程中的效率问题。通过精确的代码定位和高质量的内容提取，该工具显著提升了开发者的学习效率，同时为AI辅助开发工具提供了更准确的上下文输入。",
      "technologies": ["TypeScript", "Python"],
      "image": "/assets/projects/gitseek.png",
      "screenshot": "/assets/projects/screenshots/gitseek-screenshot.png",
      "liveUrl": "https://gitseek.dev/",
      "featured": true,
      "category": "ai-agent"
    },
    {
      "id": "excel-whisper",
      "title": "Excel Whisper",
      "description": "隐私安全的Excel AI分析工具，本地处理数据并支持自然语言查询。",
      "detailedDescription": "## 项目概述\n\nExcel Whisper 是一个专注于隐私保护的Excel分析工具，用于解决电子表格数据分析中的效率和安全问题。传统的数据分析工具要求将敏感数据上传到云端服务器，存在隐私泄露风险，同时复杂的Excel公式和函数也增加了用户的学习成本。\n\nExcel Whisper通过浏览器端处理技术，确保所有数据分析过程都在用户设备本地进行，数据永不离开用户浏览器。系统支持自然语言查询，用户可以用简单的文字描述来执行复杂的数据分析操作，无需掌握复杂的Excel函数语法。\n\n## 技术架构\n\n系统基于现代Web技术构建，采用TypeScript确保代码质量和类型安全。前端使用React框架，提供直观的拖放界面和实时分析结果展示。核心处理引擎运行在浏览器端，通过WebAssembly技术实现高性能的数据计算和处理。\n\n数据分析模块集成了自然语言处理算法，能够理解用户的查询意图并转换为相应的数据操作。系统支持多文件同时分析、智能数据清洗、自动图表生成等功能，同时保持严格的本地化处理原则，确保数据安全。\n\n## 应用价值\n\nExcel Whisper为专业用户提供了安全高效的数据分析解决方案。通过本地化处理和自然语言界面，该工具显著降低了数据分析的技术门槛，同时确保了敏感数据的完全保密。系统已被金融、咨询、科研等对数据安全要求较高的行业广泛采用。",
      "technologies": ["TypeScript", "WebAssembly", "Python"],
      "image": "/assets/projects/excelwhisper.png",
      "screenshot": "/assets/projects/screenshots/excelwhisper-screenshot.png",
      "liveUrl": "https://excelwhisper.com/",
      "featured": true,
      "category": "ai-agent"
    },
    {
      "id": "richard-os",
      "title": "Richard OS",
      "description": "基于Web技术的个性化展示平台，集成多元化应用生态展现个人能力与特色。",
      "detailedDescription": "## 项目概述\n\nRichard OS 是一个基于ryOS开源项目改造的个性化展示平台。系统采用桌面操作系统的交互模式，将个人展示内容组织为独立的应用程序。\n\n访问者可以通过类似使用操作系统的方式，了解个人的技术能力、项目经验、兴趣爱好和创作内容。系统集成了Projects、Hobbies、Gallery、Blog等应用模块。\n\n## 技术架构\n\n平台基于React框架和TypeScript构建，使用Vite作为构建工具。整体架构采用模块化设计，每个应用作为独立组件开发。\n\n界面设计致敬经典Mac OS美学，通过像素级的UI还原和Geneva字体应用，营造复古视觉体验。系统集成了窗口管理机制，支持多窗口并行操作、拖拽调整和层级管理。",
      "technologies": ["TypeScript"],
      "image": "/assets/projects/richardos.png",
      "screenshot": "/assets/projects/screenshots/richardos-screenshot.png",
      "liveUrl": "https://os.richardwang.me",
      "githubUrl": "https://github.com/i-richardwang/RichardOS",
      "featured": true,
      "category": "web-app"
    },
    {
      "id": "sitesnapper",
      "title": "SiteSnapper",
      "description": "网页归档工具，一键捕获高质量截图、元数据和完整文本内容。",
      "detailedDescription": "## 项目概述\n\nSiteSnapper 是一个综合性的网页归档工具，用于解决内容研究和文档管理中的网页保存问题。传统的书签和文本保存方式无法完整保留网页的视觉外观和结构信息，当原始网页发生变化或消失时，相关信息就会丢失。\n\nSiteSnapper通过自动化的内容提取技术，能够在几秒钟内完整捕获网页的视觉截图、关键元数据和全文内容。系统支持多种分辨率、设备模式和主题设置，确保捕获的内容能够准确反映网页的原始状态。\n\n## 技术架构\n\n系统采用无头浏览器技术进行网页渲染，支持JavaScript执行和动态内容加载。后端基于TypeScript和Node.js构建，使用Puppeteer进行页面控制和截图生成。前端采用React技术栈，提供直观的参数配置界面和实时预览功能。\n\n核心处理流程包括智能等待机制、元素点击模拟和CSS注入功能，确保捕获的内容完整准确。系统还集成了多种输出格式支持，用户可以选择PNG或JPEG格式导出截图，同时提供结构化的元数据和文本内容。\n\n## 应用价值\n\nSiteSnapper为数字内容管理提供了可靠的解决方案。通过完整的网页归档功能，该工具帮助研究人员、内容策展人和数字专业人士建立持久的内容库。系统的高效处理能力和99.9%的成功率，使其成为网页内容保存和分析的重要工具。",
      "technologies": ["TypeScript"],
      "image": "/assets/projects/sitesnapper.png",
      "screenshot": "/assets/projects/screenshots/sitesnapper-screenshot.png",
      "liveUrl": "https://sitesnapper.app/",
      "featured": false,
      "category": "web-app"
    }
  ]
} 